import { BaseApiService } from "../../../services/shared/api.service";
import { ControleHorarioResponse, FiltrosControleHorarios, OpcoesControleHorarios, SalvarControleHorario, SalvarMultiplosControles, EstatisticasControleHorarios, SincronizarControleHorariosDto, SincronizacaoResponse } from  '../types/controle-horarios.types'; // ‚úÖ CAMINHO CORRIGIDO

export class ControleHorariosService extends BaseApiService {
  constructor() {
    super();
  }

  /**
   * ‚úÖ Buscar controle de hor√°rios com filtros
   */
  async getControleHorarios(data: string, filtros: FiltrosControleHorarios = {}): Promise<ControleHorarioResponse> {
    console.log(`üïê Buscando controle de hor√°rios para ${data}...`, filtros);
    
    const params = new URLSearchParams();
    Object.entries(filtros).forEach(([key, value]) => {
      if (value !== undefined && value !== null && value !== '') {
        params.append(key, value.toString());
      }
    });

    const queryString = params.toString();
    const url = `/controle-horarios/${data}${queryString ? `?${queryString}` : ''}`;
    
    const response = await this.api.get<ControleHorarioResponse>(url);
    console.log(`‚úÖ ${response.data.data.length}/${response.data.total} controles encontrados`);
    return response.data;
  }

  /**
   * ‚úÖ Salvar controle de hor√°rio individual
   */
  async salvarControleHorario(data: string, controle: SalvarControleHorario): Promise<{ success: boolean; message: string; data: any }> {
    console.log(`üíæ Salvando controle para viagem ${controle.viagemGlobusId}...`);
    const response = await this.api.post(`/controle-horarios/${data}/salvar`, controle);
    console.log('‚úÖ Controle salvo com sucesso');
    return response.data;
  }

  /**
   * ‚úÖ Salvar m√∫ltiplos controles
   */
  async salvarMultiplosControles(dados: SalvarMultiplosControles): Promise<{ success: boolean; message: string; salvos: number; erros: number }> {
    console.log(`üíæ Salvando ${dados.controles.length} controles para ${dados.dataReferencia}...`);
    const response = await this.api.post('/controle-horarios/salvar-multiplos', dados);
    console.log(`‚úÖ Salvamento conclu√≠do: ${response.data.salvos} sucessos, ${response.data.erros} erros`);
    return response.data;
  }

  /**
   * ‚úÖ Buscar op√ß√µes para filtros
   */
  async getOpcoesControleHorarios(data: string): Promise<{ success: boolean; message: string; data: OpcoesControleHorarios }> {
    console.log(`üîç Buscando op√ß√µes de filtros para ${data}...`);
    const response = await this.api.get(`/controle-horarios/${data}/opcoes`);
    console.log('‚úÖ Op√ß√µes obtidas com sucesso');
    return response.data;
  }

  /**
   * ‚úÖ Obter estat√≠sticas do controle de hor√°rios
   */
  async getEstatisticasControleHorarios(data: string): Promise<{ success: boolean; message: string; data: EstatisticasControleHorarios }> {
    console.log(`üìä Buscando estat√≠sticas de controle para ${data}...`);
    const response = await this.api.get(`/controle-horarios/${data}/estatisticas`);
    console.log('‚úÖ Estat√≠sticas obtidas');
    return response.data;
  }

  /**
   * ‚úÖ Verificar status dos dados de controle
   */
  async getStatusControleHorarios(data: string): Promise<{ success: boolean; message: string; data: any; dataReferencia: string }> {
    console.log(`üìä Verificando status do controle para ${data}...`);
    const response = await this.api.get(`/controle-horarios/${data}/status`);
    console.log('‚úÖ Status verificado');
    return response.data;
  }

  /**
   * ‚úÖ Sincronizar dados com o Globus
   */
  async sincronizarControleHorarios(data: string, payload?: SincronizarControleHorariosDto): Promise<SincronizacaoResponse> {
    console.log(`üîÑ Sincronizando controle de hor√°rios para ${data}...`, payload);
    const response = await this.api.post(`/controle-horarios/${data}/sincronizar`, payload);
    console.log('‚úÖ Sincroniza√ß√£o conclu√≠da');
    return response.data;
  }

  /**
   * ‚úÖ Health check do m√≥dulo controle de hor√°rios
   */
  async checkHealthControleHorarios(): Promise<{ success: boolean; message: string; status: string; timestamp: string }> {
    console.log('üè• Verificando sa√∫de do m√≥dulo Controle de Hor√°rios...');
    const response = await this.api.get('/controle-horarios/health');
    console.log('‚úÖ Health check do controle realizado');
    return response.data;
  }
}

export const controleHorariosService = new ControleHorariosService();